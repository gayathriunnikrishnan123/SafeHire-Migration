# Generated by Django 4.2.5 on 2024-04-04 05:07

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('phone', models.CharField(blank=True, max_length=12, null=True)),
                ('adhar_number', models.CharField(blank=True, max_length=12, null=True)),
                ('license_number', models.CharField(blank=True, max_length=10, null=True)),
                ('police_id', models.CharField(blank=True, max_length=6, null=True)),
                ('uploaded_file', models.FileField(blank=True, null=True, upload_to='uploaded_files/')),
                ('is_verified', models.BooleanField(default=False)),
                ('is_rejected', models.BooleanField(default=False)),
                ('user_type', models.CharField(choices=[('employer', 'Employer'), ('agent', 'Agent'), ('police', 'Police'), ('admin', 'Admin')], default='employer', max_length=10)),
                ('is_employer', models.BooleanField(default=False)),
                ('is_agent', models.BooleanField(default=False)),
                ('is_police', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MigratoryWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=6, null=True)),
                ('nationality', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('contact_number', models.CharField(max_length=15)),
                ('adhar_number', models.CharField(blank=True, max_length=12, null=True)),
                ('profile_image', models.ImageField(upload_to='profile_images/')),
                ('document', models.FileField(upload_to='documents')),
                ('is_verified', models.BooleanField(default=False)),
                ('is_rejected', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('work_permit_verified', models.BooleanField(default=False)),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
                ('agent', models.ForeignKey(limit_choices_to={'is_agent': True}, on_delete=django.db.models.deletion.CASCADE, related_name='agent_workers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WorkCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='media/profile_picture')),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=6, null=True)),
                ('profile_created_at', models.DateTimeField(auto_now_add=True)),
                ('profile_modified_at', models.DateTimeField(auto_now=True)),
                ('add_pf', models.FileField(blank=True, null=True, upload_to='add_pf/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SalaryPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateField()),
                ('card_holder_name', models.CharField(max_length=100)),
                ('card_number', models.CharField(max_length=16)),
                ('cvv', models.CharField(max_length=3)),
                ('payment_status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed'), ('Failed', 'Failed')], max_length=20)),
                ('worker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.migratoryworker')),
            ],
        ),
        migrations.CreateModel(
            name='Police',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=6, null=True)),
                ('badge_number', models.CharField(max_length=20)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('rank', models.CharField(blank=True, max_length=50, null=True)),
                ('service_years', models.PositiveIntegerField(blank=True, null=True)),
                ('station_name', models.CharField(blank=True, max_length=100, null=True)),
                ('station_address', models.CharField(blank=True, max_length=150, null=True)),
                ('station_contact', models.CharField(blank=True, max_length=20, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='migratoryworker',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.workcategory'),
        ),
        migrations.AddField(
            model_name='migratoryworker',
            name='employer',
            field=models.ForeignKey(blank=True, limit_choices_to={'is_employer': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employer_workers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='migratoryworker',
            name='police',
            field=models.ForeignKey(blank=True, limit_choices_to={'is_police': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='police_workers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='JobSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_type', models.CharField(choices=[('Full-time', 'Full-time'), ('Part-time', 'Part-time'), ('Contract', 'Contract'), ('Freelance', 'Freelance')], max_length=20)),
                ('work_location', models.CharField(max_length=100)),
                ('duration', models.PositiveIntegerField(help_text='Duration in months')),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('district', models.CharField(default='SOME STRING', max_length=100)),
                ('city', models.CharField(default='SOME STRING', max_length=100)),
                ('employer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.workcategory')),
                ('worker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.migratoryworker')),
            ],
        ),
        migrations.CreateModel(
            name='BookingWorkers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_requested', models.DateTimeField(auto_now_add=True)),
                ('is_accepted', models.BooleanField(default=False)),
                ('is_rejected', models.BooleanField(default=False)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings_as_agent', to=settings.AUTH_USER_MODEL)),
                ('employer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings_as_employer', to=settings.AUTH_USER_MODEL)),
                ('job_submission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='booking_workers', to='home.jobsubmission')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='home.migratoryworker')),
            ],
        ),
    ]
